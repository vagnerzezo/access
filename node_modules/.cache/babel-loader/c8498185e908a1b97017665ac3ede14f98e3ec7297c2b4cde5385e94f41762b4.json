{"ast":null,"code":"export default {\n  props: {\n    userId: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      user: {} // Armazena os dados do usuário\n    };\n  },\n  async mounted() {\n    await this.fetchUserData();\n  },\n  methods: {\n    async fetchUserData() {\n      try {\n        const response = await fetch(`https://dummyjson.com/users/${this.userId}`);\n        const data = await response.json();\n        this.user = data; // Atualiza os dados do usuário no estado\n      } catch (error) {\n        console.error(\"Erro ao buscar os dados do usuário:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["props","userId","type","Number","required","data","user","mounted","fetchUserData","methods","response","fetch","json","error","console"],"sources":["/Users/vagnerzezo/Documents/development/2025/access/src/components/logado.vue"],"sourcesContent":["<template>\n     <div>\n          <h1>Detalhes do Usuário</h1>\n          <div>\n               <h2>Informações Gerais</h2>\n               <ul>\n                    <li><strong>ID:</strong> {{ user.id }}</li>\n                    <li><strong>Nome:</strong> {{ user.firstName }} {{ user.lastName }}</li>\n                    <li><strong>Nome de Solteira:</strong> {{ user.maidenName }}</li>\n                    <li><strong>Idade:</strong> {{ user.age }}</li>\n                    <li><strong>Gênero:</strong> {{ user.gender }}</li>\n                    <li><strong>Email:</strong> {{ user.email }}</li>\n                    <li><strong>Telefone:</strong> {{ user.phone }}</li>\n                    <li><strong>Usuário:</strong> {{ user.username }}</li>\n                    <li><strong>Data de Nascimento:</strong> {{ user.birthDate }}</li>\n                    <li><strong>Grupo Sanguíneo:</strong> {{ user.bloodGroup }}</li>\n                    <li><strong>Altura:</strong> {{ user.height }} cm</li>\n                    <li><strong>Peso:</strong> {{ user.weight }} kg</li>\n                    <li><strong>Cor dos Olhos:</strong> {{ user.eyeColor }}</li>\n                    <li>\n                         <strong>Cabelo:</strong> {{ user?.hair?.color }} ({{ user?.hair?.type }})\n                    </li>\n               </ul>\n          </div>\n\n          <div>\n               <h2>Endereço</h2>\n               <ul>\n                    <li><strong>Endereço:</strong> {{ user?.address?.address }}</li>\n                    <li><strong>Cidade:</strong> {{ user?.address?.city }}</li>\n                    <li><strong>Estado:</strong> {{ user.address.state }} ({{ user.address.stateCode }})</li>\n                    <li><strong>CEP:</strong> {{ user.address.postalCode }}</li>\n                    <li>\n                         <strong>Coordenadas:</strong>\n                         {{ user.address.coordinates.lat }}, {{ user.address.coordinates.lng }}\n                    </li>\n                    <li><strong>País:</strong> {{ user.address.country }}</li>\n               </ul>\n          </div>\n\n          <div>\n               <h2>Empresa</h2>\n               <ul>\n                    <li><strong>Nome:</strong> {{ user.company.name }}</li>\n                    <li><strong>Departamento:</strong> {{ user.company.department }}</li>\n                    <li><strong>Cargo:</strong> {{ user.company.title }}</li>\n                    <li>\n                         <strong>Endereço:</strong>\n                         {{ user.company.address.address }}, {{ user.company.address.city }},\n                         {{ user.company.address.state }} ({{ user.company.address.stateCode }})\n                    </li>\n               </ul>\n          </div>\n\n          <div>\n               <h2>Banco</h2>\n               <ul>\n                    <li><strong>Tipo de Cartão:</strong> {{ user.bank.cardType }}</li>\n                    <li><strong>Número do Cartão:</strong> {{ user.bank.cardNumber }}</li>\n                    <li><strong>Validade:</strong> {{ user.bank.cardExpire }}</li>\n                    <li><strong>Moeda:</strong> {{ user.bank.currency }}</li>\n                    <li><strong>IBAN:</strong> {{ user.bank.iban }}</li>\n               </ul>\n          </div>\n\n          <div>\n               <h2>Criptomoeda</h2>\n               <ul>\n                    <li><strong>Moeda:</strong> {{ user.crypto.coin }}</li>\n                    <li><strong>Carteira:</strong> {{ user.crypto.wallet }}</li>\n                    <li><strong>Rede:</strong> {{ user.crypto.network }}</li>\n               </ul>\n          </div>\n\n          <div>\n               <h2>Outros</h2>\n               <ul>\n                    <li><strong>IP:</strong> {{ user.ip }}</li>\n                    <li><strong>MAC Address:</strong> {{ user.macAddress }}</li>\n                    <li><strong>Agente do Usuário:</strong> {{ user.userAgent }}</li>\n                    <li><strong>Universidade:</strong> {{ user.university }}</li>\n                    <li><strong>EIN:</strong> {{ user.ein }}</li>\n                    <li><strong>SSN:</strong> {{ user.ssn }}</li>\n                    <li><strong>Papel:</strong> {{ user.role }}</li>\n               </ul>\n          </div>\n     </div>\n</template>\n\n<script>\nexport default {\n     props: {\n          userId: {\n               type: Number,\n               required: true,\n          },\n     },\n     data() {\n          return {\n               user: {}, // Armazena os dados do usuário\n          };\n     },\n     async mounted() {\n          await this.fetchUserData();\n     },\n     methods: {\n          async fetchUserData() {\n               try {\n                    const response = await fetch(`https://dummyjson.com/users/${this.userId}`);\n                    const data = await response.json();\n                    this.user = data; // Atualiza os dados do usuário no estado\n               } catch (error) {\n                    console.error(\"Erro ao buscar os dados do usuário:\", error);\n               }\n          },\n     },\n};\n</script>"],"mappings":"AA0FA,eAAe;EACVA,KAAK,EAAE;IACFC,MAAM,EAAE;MACHC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACf;EACL,CAAC;EACDC,IAAIA,CAAA,EAAG;IACF,OAAO;MACFC,IAAI,EAAE,CAAC,CAAC,CAAE;IACf,CAAC;EACN,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACX,MAAM,IAAI,CAACC,aAAa,CAAC,CAAC;EAC/B,CAAC;EACDC,OAAO,EAAE;IACJ,MAAMD,aAAaA,CAAA,EAAG;MACjB,IAAI;QACC,MAAME,QAAO,GAAI,MAAMC,KAAK,CAAC,+BAA+B,IAAI,CAACV,MAAM,EAAE,CAAC;QAC1E,MAAMI,IAAG,GAAI,MAAMK,QAAQ,CAACE,IAAI,CAAC,CAAC;QAClC,IAAI,CAACN,IAAG,GAAID,IAAI,EAAE;MACvB,EAAE,OAAOQ,KAAK,EAAE;QACXC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAChE;IACL;EACL;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}